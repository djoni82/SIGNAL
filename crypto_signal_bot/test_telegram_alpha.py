#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Telegram –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è Alpha Signal Bot
"""

import asyncio
from alpha_signal_bot import TelegramBot, format_signal_for_telegram, explain_signal

async def test_telegram_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...")
    
    telegram = TelegramBot()
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    test_message = "üß™ **–¢–ï–°–¢ ALPHA SIGNAL BOT**\n\n"
    test_message += "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
    test_message += "ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∏–≥–Ω–∞–ª–æ–≤\n"
    test_message += "üìä –°–∏—Å—Ç–µ–º–∞ 'Best Alpha Only' –∞–∫—Ç–∏–≤–Ω–∞"
    
    result = await telegram.send_message(test_message)
    
    if result:
        print("‚úÖ Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram")
        return False

async def test_signal_formatting():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª
    test_signal = {
        'symbol': 'BTC/USDT',
        'action': 'BUY',
        'entry_price': 50000.0,
        'confidence': 0.85,
        'analysis': {
            'rsi': 65.5,
            'macd': {
                'macd': 0.002,
                'signal': 0.001,
                'histogram': 0.001
            },
            'ema_20': 50100.0,
            'ema_50': 49900.0,
            'bb_upper': 50200.0,
            'bb_lower': 49800.0,
            'ma_50': 50050.0,
            'adx': 28.5,
            'volume_ratio': 1.8,
            'price': 50000.0
        },
        'mtf_analysis': {
            '15m': {'rsi': 65, 'price': 50000},
            '1h': {'rsi': 62, 'price': 50000},
            '4h': {'rsi': 58, 'price': 50000}
        }
    }
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª
    formatted_message = format_signal_for_telegram(test_signal)
    
    print("üìù –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
    print("=" * 50)
    print(formatted_message)
    print("=" * 50)
    
    return formatted_message

async def test_signal_sending():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞...")
    
    telegram = TelegramBot()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª
    test_signal = {
        'symbol': 'ETH/USDT',
        'action': 'SELL',
        'entry_price': 3200.0,
        'confidence': 0.82,
        'analysis': {
            'rsi': 35.2,
            'macd': {
                'macd': -0.003,
                'signal': -0.001,
                'histogram': -0.002
            },
            'ema_20': 3180.0,
            'ema_50': 3220.0,
            'bb_upper': 3250.0,
            'bb_lower': 3150.0,
            'ma_50': 3210.0,
            'adx': 32.1,
            'volume_ratio': 2.1,
            'price': 3200.0
        },
        'mtf_analysis': {
            '15m': {'rsi': 35, 'price': 3200},
            '1h': {'rsi': 38, 'price': 3200},
            '4h': {'rsi': 42, 'price': 3200}
        }
    }
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    message = format_signal_for_telegram(test_signal)
    result = await telegram.send_message(message)
    
    if result:
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞")
        return False

async def test_explanation_function():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    signal = {'action': 'BUY'}
    analysis = {
        'rsi': 82.49,
        'macd': {'histogram': 0.008},
        'ema_20': 0.38,
        'ema_50': 0.37,
        'bb_upper': 0.39,
        'bb_lower': 0.36,
        'ma_50': 0.375,
        'adx': 28.5,
        'volume_ratio': 1.5,
        'price': 0.3783
    }
    mtf_analysis = {
        '15m': {'rsi': 82, 'price': 0.3783},
        '1h': {'rsi': 78, 'price': 0.3783},
        '4h': {'rsi': 75, 'price': 0.3783}
    }
    
    explanation = explain_signal(signal, analysis, mtf_analysis)
    
    print("üìù –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞:")
    print("=" * 50)
    print(explanation)
    print("=" * 50)
    
    return explanation

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ALPHA SIGNAL BOT")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram
    telegram_ok = await test_telegram_connection()
    
    # –¢–µ—Å—Ç 2: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤
    await test_signal_formatting()
    
    # –¢–µ—Å—Ç 3: –§—É–Ω–∫—Ü–∏—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
    await test_explanation_function()
    
    # –¢–µ—Å—Ç 4: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞
    if telegram_ok:
        await test_signal_sending()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

if __name__ == "__main__":
    asyncio.run(main()) 